plugins {
  id 'io.atomicwire.gradle.orchestra'
}

orchestra {
  specification {
    markdown {}

    // Specify the corresponding Avro datatype for each datatype in the Orchestra specification.
    encoding {
      datatypeMapping([
        Double: [
          Avro: 'double',
        ],
        Integer: [
          Avro: 'int',
        ],
        Price: [
          Avro: 'double',
        ],
        Quantity: [
          Avro: 'int',
        ],
        String: [
          Avro: 'string',
        ],
        Timestamp: [
          Avro: [
            standardType: 'long',
            avroLogicalType: 'timestamp-micros',
          ],
        ],
      ])
    }
  }

  // Enable Avro schema generation
  avro {
    namespace = 'org.example.orchestra'
  }
}

tasks.named('runExample') {
  dependsOn tasks.named('orchestraGenerateAvroSchema')

  doLast {
    println "Generated Avro schemas in ${orchestra.avro.schemaOutputDir.get()}"
  }
}
